<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nanotate.dao.model.AnnotationMapper">
  <resultMap id="BaseResultMap" type="com.nanotate.dao.model.Annotation">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="original_text" jdbcType="VARCHAR" property="original_text" />
    <result column="tags" jdbcType="VARCHAR" property="tags" />
    <result column="document" jdbcType="VARCHAR" property="document" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="creation" jdbcType="TIMESTAMP" property="creation" />
    <result column="completed" jdbcType="TIMESTAMP" property="completed" />
    <result column="json_value" jdbcType="VARCHAR" property="json_value" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, original_text, tags, document, status, creation, completed, json_value
  </sql>
  <select id="selectByExample" parameterType="com.nanotate.dao.model.AnnotationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from public.annotation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from public.annotation
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from public.annotation
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.nanotate.dao.model.AnnotationExample">
    delete from public.annotation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.nanotate.dao.model.Annotation">
    insert into public.annotation (id, original_text, tags, document, 
      status, creation, completed, 
      json_value)
    values (#{id,jdbcType=INTEGER},#{original_text,jdbcType=VARCHAR}, #{tags,jdbcType=VARCHAR}, #{document,jdbcType=VARCHAR}, 
      #{status,jdbcType=VARCHAR}, #{creation,jdbcType=TIMESTAMP}, #{completed,jdbcType=TIMESTAMP}, 
      #{json_value,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.nanotate.dao.model.Annotation">
   
    insert into public.annotation
    <trim prefix="(" suffix=")" suffixOverrides=",">
    <if test="id != null" >
        id,
      </if>
      <if test="original_text != null">
        original_text,
      </if>
      <if test="tags != null">
        tags,
      </if>
      <if test="document != null">
        document,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="creation != null">
        creation,
      </if>
      <if test="completed != null">
        completed,
      </if>
      <if test="json_value != null">
        json_value,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="original_text != null">
        #{original_text,jdbcType=VARCHAR},
      </if>
      <if test="tags != null">
        #{tags,jdbcType=VARCHAR},
      </if>
      <if test="document != null">
        #{document,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="creation != null">
        #{creation,jdbcType=TIMESTAMP},
      </if>
      <if test="completed != null">
        #{completed,jdbcType=TIMESTAMP},
      </if>
      <if test="json_value != null">
        #{json_value,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.nanotate.dao.model.AnnotationExample" resultType="java.lang.Integer">
    select count(*) from public.annotation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update public.annotation
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.original_text != null">
        original_text = #{record.original_text,jdbcType=VARCHAR},
      </if>
      <if test="record.tags != null">
        tags = #{record.tags,jdbcType=VARCHAR},
      </if>
      <if test="record.document != null">
        document = #{record.document,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.creation != null">
        creation = #{record.creation,jdbcType=TIMESTAMP},
      </if>
      <if test="record.completed != null">
        completed = #{record.completed,jdbcType=TIMESTAMP},
      </if>
      <if test="record.json_value != null">
        json_value = #{record.json_value,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update public.annotation
    set id = #{record.id,jdbcType=INTEGER},
      original_text = #{record.original_text,jdbcType=VARCHAR},
      tags = #{record.tags,jdbcType=VARCHAR},
      document = #{record.document,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      creation = #{record.creation,jdbcType=TIMESTAMP},
      completed = #{record.completed,jdbcType=TIMESTAMP},
      json_value = #{record.json_value,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.nanotate.dao.model.Annotation">
    update public.annotation
    <set>
      <if test="original_text != null">
        original_text = #{original_text,jdbcType=VARCHAR},
      </if>
      <if test="tags != null">
        tags = #{tags,jdbcType=VARCHAR},
      </if>
      <if test="document != null">
        document = #{document,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="creation != null">
        creation = #{creation,jdbcType=TIMESTAMP},
      </if>
      <if test="completed != null">
        completed = #{completed,jdbcType=TIMESTAMP},
      </if>
      <if test="json_value != null">
        json_value = #{json_value,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nanotate.dao.model.Annotation">
    update public.annotation
    set original_text = #{original_text,jdbcType=VARCHAR},
      tags = #{tags,jdbcType=VARCHAR},
      document = #{document,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      creation = #{creation,jdbcType=TIMESTAMP},
      completed = #{completed,jdbcType=TIMESTAMP},
      json_value = #{json_value,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
 
   
 
</mapper>