package org.nanotate.ui.components;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Accordion;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.Panel;
import com.vaadin.ui.TextArea;
import com.vaadin.ui.VerticalLayout;

public class AnnotationUI extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private Panel panel_1;
	@AutoGenerated
	private VerticalLayout verticalLayout_1;
	@AutoGenerated
	private HorizontalLayout horizontalLayout_1;
	@AutoGenerated
	private Button button_2;
	@AutoGenerated
	private Button button_1;
	@AutoGenerated
	private Accordion annotation_acc;
	@AutoGenerated
	private TextArea textArea_2;
	@AutoGenerated
	private AbsoluteLayout absoluteLayout_2;
	@AutoGenerated
	private TextArea textArea_1;
	@AutoGenerated
	private Label label_1;
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public AnnotationUI() {
		buildMainLayout();
		 loadDummyData();
		setCompositionRoot(mainLayout);
		
		// TODO add user code here
	}

	private void loadDummyData(){
		
		absoluteLayout_2.addComponent(new Label("Tag"));
		absoluteLayout_2.addComponent(new Label("Tag"));
		absoluteLayout_2.addComponent(new Label("Tag"));
		absoluteLayout_2.addComponent(new Label("Tag"));
		absoluteLayout_2.addComponent(new Label("Tag"));
		absoluteLayout_2.addComponent(new Label("Tag"));
		absoluteLayout_2.addComponent(new Label("Tag"));
		absoluteLayout_2.addComponent(new Label("Tag"));
		absoluteLayout_2.addComponent(new Label("Tag"));
		absoluteLayout_2.addComponent(new Label("Tag"));
	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setStyleName("annotation-ui");
		mainLayout.setImmediate(false);
		mainLayout.setWidth("250px");
		mainLayout.setHeight("250px");
		
		// top-level component properties
		setWidth("250px");
		setHeight("250px");
		
		// panel_1
		panel_1 = buildPanel_1();
		mainLayout.addComponent(panel_1, "top:0.0px;right:0.0px;left:0.0px;");
		
		return mainLayout;
	}

	@AutoGenerated
	private Panel buildPanel_1() {
		// common part: create layout
		panel_1 = new Panel();
		panel_1.setImmediate(false);
		panel_1.setWidth("100.0%");
		panel_1.setHeight("100.0%");
		
		// verticalLayout_1
		verticalLayout_1 = buildVerticalLayout_1();
		panel_1.setContent(verticalLayout_1);
		
		return panel_1;
	}

	@AutoGenerated
	private VerticalLayout buildVerticalLayout_1() {
		// common part: create layout
		verticalLayout_1 = new VerticalLayout();
		verticalLayout_1.setImmediate(false);
		verticalLayout_1.setWidth("100.0%");
		verticalLayout_1.setHeight("100.0%");
		verticalLayout_1.setMargin(false);
		
		// label_1
		label_1 = new Label();
		label_1.setStyleName("date-label");
		label_1.setImmediate(false);
		label_1.setWidth("100.0%");
		label_1.setHeight("-1px");
		label_1.setValue("2014-07-13 11:38:53");
		verticalLayout_1.addComponent(label_1);
		verticalLayout_1.setComponentAlignment(label_1, new Alignment(48));
		
		// textArea_1
		textArea_1 = new TextArea();
		textArea_1.setImmediate(false);
		textArea_1.setWidth("100.0%");
		textArea_1.setHeight("-1px");
		verticalLayout_1.addComponent(textArea_1);
		verticalLayout_1.setComponentAlignment(textArea_1, new Alignment(48));
		
		// annotation_acc
		annotation_acc = buildAnnotation_acc();
		verticalLayout_1.addComponent(annotation_acc);
		
		// horizontalLayout_1
		horizontalLayout_1 = buildHorizontalLayout_1();
		verticalLayout_1.addComponent(horizontalLayout_1);
		verticalLayout_1.setComponentAlignment(horizontalLayout_1,
				new Alignment(48));
		
		return verticalLayout_1;
	}

	@AutoGenerated
	private Accordion buildAnnotation_acc() {
		// common part: create layout
		annotation_acc = new Accordion();
		annotation_acc.setImmediate(true);
		annotation_acc.setWidth("100.0%");
		annotation_acc.setHeight("-1px");
		
		// absoluteLayout_2
		absoluteLayout_2 = new AbsoluteLayout();
		absoluteLayout_2.setStyleName("flow-layout");
		absoluteLayout_2.setImmediate(false);
		absoluteLayout_2.setWidth("100.0%");
		absoluteLayout_2.setHeight("-1px");
		annotation_acc.addTab(absoluteLayout_2, "tags", null);
		
		// textArea_2
		textArea_2 = new TextArea();
		textArea_2.setImmediate(false);
		textArea_2.setWidth("100.0%");
		textArea_2.setHeight("-1px");
		annotation_acc.addTab(textArea_2, "comment", null);
		
		return annotation_acc;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_1() {
		// common part: create layout
		horizontalLayout_1 = new HorizontalLayout();
		horizontalLayout_1.setImmediate(false);
		horizontalLayout_1.setWidth("-1px");
		horizontalLayout_1.setHeight("-1px");
		horizontalLayout_1.setMargin(false);
		
		// button_1
		button_1 = new Button();
		button_1.setCaption("Button");
		button_1.setImmediate(true);
		button_1.setWidth("-1px");
		button_1.setHeight("-1px");
		horizontalLayout_1.addComponent(button_1);
		horizontalLayout_1.setComponentAlignment(button_1, new Alignment(20));
		
		// button_2
		button_2 = new Button();
		button_2.setCaption("Button");
		button_2.setImmediate(true);
		button_2.setWidth("-1px");
		button_2.setHeight("-1px");
		horizontalLayout_1.addComponent(button_2);
		horizontalLayout_1.setComponentAlignment(button_2, new Alignment(20));
		
		return horizontalLayout_1;
	}

}
