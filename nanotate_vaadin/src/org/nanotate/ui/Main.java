package org.nanotate.ui;

import org.vostok.vaadin.addon.button.i18n.I18nButton;
import org.vostok.vaadin.addon.button.push.PushButton;
import org.vostok.vaadin.addon.dialog.NotificationExtension;
import org.vostok.vaadin.addon.toolbar.Toolbar;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.server.ExternalResource;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Embedded;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Panel;
import com.vaadin.ui.VerticalLayout;

public class Main extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private Panel contentpanel;
	@AutoGenerated
	private VerticalLayout verticalLayout_1;
	@AutoGenerated
	private Panel panel_2;
	@AutoGenerated
	private HorizontalLayout horizontalLayout_1;
	@AutoGenerated
	private Toolbar toolbar;
	@AutoGenerated
	private Embedded embedded_1;
	
	private Viewer viewer;
	private Home home;
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public Main() {
		buildMainLayout();
		viewer = new Viewer();
		home = new Home();
		setCompositionRoot(mainLayout);

		// TODO add user code here
	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// panel_2
		panel_2 = buildPanel_2();
		mainLayout.addComponent(panel_2, "top:10.0px;right:5.0%;left:5.0%;");
		
		// contentpanel
		contentpanel = buildContentpanel();
		mainLayout.addComponent(contentpanel,
				"top:100.0px;right:0.0px;bottom:0.0px;left:0.0px;");
		
		return mainLayout;
	}

	@AutoGenerated
	private Panel buildPanel_2() {
		// common part: create layout
		panel_2 = new Panel();
		panel_2.setStyleName("toolbar-panel");
		panel_2.setImmediate(false);
		panel_2.setWidth("100.0%");
		panel_2.setHeight("-1px");
		
		// horizontalLayout_1
		horizontalLayout_1 = buildHorizontalLayout_1();
		panel_2.setContent(horizontalLayout_1);
		
		return panel_2;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_1() {
		// common part: create layout
		horizontalLayout_1 = new HorizontalLayout();
		horizontalLayout_1.setImmediate(false);
		horizontalLayout_1.setWidth("100.0%");
		horizontalLayout_1.setHeight("100.0%");
		horizontalLayout_1.setMargin(false);
		
		// embedded_1
		embedded_1 = new Embedded();
		embedded_1.setStyleName("profile-image");
		embedded_1.setImmediate(false);
		embedded_1.setWidth("-1px");
		embedded_1.setHeight("-1px");
		embedded_1
				.setSource(new ExternalResource(
						"https://lh4.googleusercontent.com/-moR4bMbRoGQ/AAAAAAAAAAI/AAAAAAAAAIM/XNHoSAo8ylw/s120-c/photo.jpg"));
		embedded_1.setType(1);
		embedded_1.setMimeType("image/png");
		horizontalLayout_1.addComponent(embedded_1);
		horizontalLayout_1.setComponentAlignment(embedded_1, new Alignment(33));
		
		// toolbar
		toolbar = new Toolbar();
		toolbar.setImmediate(false);
		toolbar.setWidth("70%");
		I18nButton homebutton = new I18nButton("home");
		final I18nButton viewerbutton =  new I18nButton("load-all");
		viewerbutton.setCaption("Viewer");
		viewerbutton.setDescription("Document viewer");
		toolbar.addComponent(new PushButton(new PushButton.PushButtonListener() {
			@Override
			public void buttonPush(Button.ClickEvent event, boolean pushed) {
				if(event.getButton().getCaption().equals("Home"))
						contentpanel.setContent(home);
				else
					contentpanel.setContent(viewer);
			}
		}, homebutton, viewerbutton){
			{
				setMode(Mode.ONEMANY);
			}
		});
		
		toolbar.addSeparator();
		
		toolbar.addButton("Upload document", "Upload document", "open");
		toolbar.addButton("Logout", "Logout", "exit");
		toolbar.setMode(Toolbar.DISPLAY.RIGHT);
		horizontalLayout_1.addComponent(toolbar);
		horizontalLayout_1.setComponentAlignment(toolbar, new Alignment(34));
		
		return horizontalLayout_1;
	}

	@AutoGenerated
	private Panel buildContentpanel() {
		// common part: create layout
		contentpanel = new Panel();
		contentpanel.setStyleName("content-panel");
		contentpanel.setImmediate(false);
		contentpanel.setWidth("100.0%");
		contentpanel.setHeight("100.0%");
		
		// verticalLayout_1
		verticalLayout_1 = new VerticalLayout();
		verticalLayout_1.setImmediate(false);
		verticalLayout_1.setWidth("100.0%");
		verticalLayout_1.setHeight("100.0%");
		verticalLayout_1.setMargin(false);
		contentpanel.setContent(home);
		
		return contentpanel;
	}

}
