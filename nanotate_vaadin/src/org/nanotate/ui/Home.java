package org.nanotate.ui;

import org.apache.commons.lang3.StringUtils;
import org.nanotate.ui.components.TwitterButton;
import org.nanotate.util.UserUtils;
import org.vaadin.addon.oauthpopup.OAuthListener;
import org.vaadin.addon.oauthpopup.buttons.FacebookButton;

import twitter4j.Twitter;
import twitter4j.TwitterException;
import twitter4j.TwitterFactory;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.server.ClassResource;
import com.vaadin.server.ExternalResource;
import com.vaadin.server.ThemeResource;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Embedded;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.Link;
import com.vaadin.ui.Notification;
import com.vaadin.ui.Notification.Type;
import com.vaadin.ui.Panel;
import com.vaadin.ui.VerticalLayout;

import facebook4j.Facebook;
import facebook4j.FacebookException;
import facebook4j.FacebookFactory;
import facebook4j.PictureSize;

public class Home extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private VerticalLayout mainLayout;
	@AutoGenerated
	private Panel panel_1;
	@AutoGenerated
	private GridLayout gridLayout_1;
	@AutoGenerated
	private Panel panel_2;
	@AutoGenerated
	private VerticalLayout verticalLayout_5;
	@AutoGenerated
	private VerticalLayout verticalLayout_4;
	@AutoGenerated
	private Label label_6;
	@AutoGenerated
	private Label label_5;
	@AutoGenerated
	private VerticalLayout verticalLayout_3;
	@AutoGenerated
	private Label label_4;
	@AutoGenerated
	private Label label_2;
	@AutoGenerated
	private VerticalLayout verticalLayout_2;
	@AutoGenerated
	private Link link_2;
	@AutoGenerated
	private Link link_1;
	@AutoGenerated
	private Label label_3;
	@AutoGenerated
	private Embedded embedded_2;
	
	
	private FacebookButton facebookButton_1;

	private TwitterButton twitterButton_1;
	
	/**
	 * 
	 */
	private static final long serialVersionUID = 2380899407168549005L;

	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public Home() {
	
		buildMainLayout();
		setCompositionRoot(mainLayout);
		

		// TODO add user code here
	}
	
	public void setName(String name){
		
		label_3.setValue(name);
		
	}

	public void setImageURL(String url){
		embedded_2
		.setSource(new ExternalResource(url));
	}
	
	public void setFacebookURL(String url, String screename){
		if(url!=null){
			link_1
			.setResource(new ExternalResource(url));
			link_1.setCaption(screename);
		}
		else
		{
			link_1.setVisible(false);
			facebookButton_1.setVisible(true);
		}
		
		
	}
	
	public void setTwitterURL(String url, String screename){
		if(url!=null){
			link_2
			.setResource(new ExternalResource(url));
			link_2.setCaption(screename);
		}
		else
		{
			link_2.setVisible(false);
			twitterButton_1.setVisible(true);
		}
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(false);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// panel_1
		panel_1 = buildPanel_1();
		mainLayout.addComponent(panel_1);
		mainLayout.setComponentAlignment(panel_1, new Alignment(20));
		
		return mainLayout;
	}

	@AutoGenerated
	private Panel buildPanel_1() {
		// common part: create layout
		panel_1 = new Panel();
		panel_1.setImmediate(false);
		panel_1.setWidth("90.0%");
		panel_1.setHeight("100.0%");
		panel_1.setStyleName("home-panel");
		
		// gridLayout_1
		gridLayout_1 = buildGridLayout_1();
		panel_1.setContent(gridLayout_1);
		
		return panel_1;
	}

	@AutoGenerated
	private GridLayout buildGridLayout_1() {
		// common part: create layout
		gridLayout_1 = new GridLayout();
		gridLayout_1.setImmediate(false);
		gridLayout_1.setWidth("100.0%");
		gridLayout_1.setHeight("100.0%");
		gridLayout_1.setMargin(false);
		gridLayout_1.setSpacing(true);
		gridLayout_1.setColumns(4);
		gridLayout_1.setRows(3);
		gridLayout_1.setColumnExpandRatio(0, 1);
		gridLayout_1.setColumnExpandRatio(1, 2);
		gridLayout_1.setColumnExpandRatio(2, 2);
		gridLayout_1.setColumnExpandRatio(3, 1);
		gridLayout_1.setRowExpandRatio(2, 2);
		
		// embedded_2
		embedded_2 = new Embedded();
		embedded_2.setStyleName("largest-profile-pic");
		embedded_2.setImmediate(false);
		embedded_2.setWidth("-1px");
		embedded_2.setHeight("-1px");
		embedded_2.setSource(new ThemeResource(
				"img/component/embedded_icon.png"));
		embedded_2.setType(1);
		embedded_2.setMimeType("image/png");
		gridLayout_1.addComponent(embedded_2, 1, 0);
		gridLayout_1.setComponentAlignment(embedded_2, Alignment.MIDDLE_RIGHT);
		
		// verticalLayout_2
		verticalLayout_2 = buildVerticalLayout_2();
		gridLayout_1.addComponent(verticalLayout_2, 2, 0);
		gridLayout_1.setComponentAlignment(verticalLayout_2, Alignment.MIDDLE_LEFT);
		
		// verticalLayout_3
		verticalLayout_3 = buildVerticalLayout_3();
		gridLayout_1.addComponent(verticalLayout_3, 1, 1);
		
		// verticalLayout_4
		verticalLayout_4 = buildVerticalLayout_4();
		gridLayout_1.addComponent(verticalLayout_4, 2, 1);
		
		// panel_2
		panel_2 = buildPanel_2();
		gridLayout_1.addComponent(panel_2, 1, 2, 2, 2);
		gridLayout_1.setComponentAlignment(panel_2, new Alignment(20));
		
		return gridLayout_1;
	}

	@AutoGenerated
	private VerticalLayout buildVerticalLayout_2() {
		// common part: create layout
		verticalLayout_2 = new VerticalLayout();
		verticalLayout_2.setImmediate(false);
		verticalLayout_2.setWidth("100.0%");
		verticalLayout_2.setHeight("-1px");
		verticalLayout_2.setMargin(false);
		verticalLayout_2.setSpacing(true);
		
		// label_3
		label_3 = new Label();
		label_3.setImmediate(false);
		label_3.setWidth("-1px");
		label_3.setHeight("-1px");
		label_3.setStyleName("home-label");
		label_3.setValue("Federico L贸pez G贸mez");
		verticalLayout_2.addComponent(label_3);
		
		// link_1
		link_1 = new Link();
		link_1.setCaption("Federico L贸pez G贸mez");
		link_1.setImmediate(false);
		link_1.setWidth("-1px");
		link_1.setHeight("-1px");
		link_1.setTargetName("_blank");
		link_1.setStyleName("home-label");
		link_1.setIcon(new ClassResource("/org/vaadin/addon/oauthpopup/icons/facebook16.png"));
		verticalLayout_2.addComponent(link_1);
		
		
		// facebookButton_1
				facebookButton_1 = new FacebookButton("1427521897511957","b58edb7c40ded996479db0f617f8ad04");
				facebookButton_1.setScope("email");
				facebookButton_1.setScope("publish_stream");
				facebookButton_1.setScope("public_profile");
				facebookButton_1.setScope("user_friends");
				facebookButton_1.setScope("publish_actions");
				facebookButton_1.setImmediate(false);
				facebookButton_1.setCaption("Connect with facebook");
				facebookButton_1.setWidth("-1px");
				facebookButton_1.setHeight("-1px");
				facebookButton_1.setVisible(false);
				

				
				facebookButton_1.addOAuthListener(new OAuthListener() {
					  @Override
					  public void authSuccessful(String accessToken, String accessTokenSecret) {
							facebook4j.conf.ConfigurationBuilder cb = new facebook4j.conf.ConfigurationBuilder();
				        	cb.setDebugEnabled(true)
				        	  .setOAuthAppId("1427521897511957")
				        	  .setOAuthAppSecret("b58edb7c40ded996479db0f617f8ad04")
				        	  .setOAuthAccessToken(accessToken);
				        	
//				        	.setOAuthAppId("1427521897511957")
//				    	  .setOAuthAppSecret("9a447eb931f93131af68176c006a1a39")
//				    	  .setOAuthPermissions("public_profile,user_friends,email,publish_stream,publish_actions");
				        	Facebook facebook = new FacebookFactory(cb.build()).getInstance();
//				        	facebook.setOAuthAccessToken(new facebook4j.auth.AccessToken(accessToken, Long.valueOf(accessTokenSecret)));
				        	getSession().setAttribute("facebook", facebook);
				        	
				        	try {
				        		facebookButton_1.setVisible(false);
								link_1.setCaption(facebook.getMe().getName());
								link_1.setResource(new ExternalResource(facebook.getMe().getLink().toString()));
								link_1.setVisible(true);
								
							} catch (FacebookException e) {
								// TODO Auto-generated catch block
								e.printStackTrace();
							}
				        	
				        	UserUtils.updateFacebook((String) getSession().getAttribute("user"), facebook);
					  }

					@Override
					public void authDenied(String reason) {
						Notification.show("Authentication failed because: "+ reason, Type.ERROR_MESSAGE);
						
					}});
				
				facebookButton_1.setPopupWindowFeatures("resizable,width=400,height=600");
				
				verticalLayout_2.addComponent(facebookButton_1);
		
		
		// link_2
		link_2 = new Link();
		link_2.setCaption("FicoYPlaca");
		link_2.setImmediate(false);
		link_2.setWidth("-1px");
		link_2.setHeight("-1px");
		link_2.setTargetName("_blank");
		link_2.setStyleName("home-label");
		link_2.setIcon(new ClassResource("/org/vaadin/addon/oauthpopup/icons/twitter16.png"));
		verticalLayout_2.addComponent(link_2);
		
		
		// twitterButton_1
				twitterButton_1 = new TwitterButton("x8P2dt3hnTVcVDaq21smdfLf0","VfC0A2FiI3Uq1v4NCRJktCpElFgQT7Ri0mxu6E9YsMQuEnpigL");
				twitterButton_1.setImmediate(false);
				twitterButton_1.setCaption("Connect with twitter");
				twitterButton_1.setWidth("-1px");
				twitterButton_1.setHeight("-1px");
				twitterButton_1.setVisible(false);
				
				
				twitterButton_1.addOAuthListener(new OAuthListener() {
					  @Override
					  public void authSuccessful(String accessToken, String accessTokenSecret) {
						  
						
						   	twitter4j.conf.ConfigurationBuilder cb = new 	twitter4j.conf.ConfigurationBuilder();
				            cb.setDebugEnabled(true)
				        .setOAuthConsumerKey("x8P2dt3hnTVcVDaq21smdfLf0")
				        .setOAuthConsumerSecret("VfC0A2FiI3Uq1v4NCRJktCpElFgQT7Ri0mxu6E9YsMQuEnpigL")
				        .setOAuthAccessToken(accessToken)
				        .setOAuthAccessTokenSecret(accessTokenSecret);
				            
				            TwitterFactory tf = new TwitterFactory(cb.build());
				           Twitter twitter = tf.getInstance();
				         
				           getSession().setAttribute("twitter", twitter);
				           
				           try {
				        		twitterButton_1.setVisible(false);
								link_2.setCaption(twitter.getScreenName());
								link_2.setResource(new ExternalResource("http://www.twitter.com/"+twitter.getScreenName()));
								link_2.setVisible(true);
								
							} catch (IllegalStateException e) {
								// TODO Auto-generated catch block
								e.printStackTrace();
							} catch (TwitterException e) {
								// TODO Auto-generated catch block
								e.printStackTrace();
							}
				           
				           UserUtils.updateTwitter((String) getSession().getAttribute("user"), twitter);
				           
					  }

					  @Override
					  public void authDenied(String reason) {
						  Notification.show("Authentication failed because: "+ reason, Type.ERROR_MESSAGE);
					  }
					});
				
				twitterButton_1.setPopupWindowFeatures("resizable,width=400,height=600");
				verticalLayout_2.addComponent(twitterButton_1);
		
		return verticalLayout_2;
	}

	@AutoGenerated
	private VerticalLayout buildVerticalLayout_3() {
		// common part: create layout
		verticalLayout_3 = new VerticalLayout();
		verticalLayout_3.setImmediate(false);
		verticalLayout_3.setWidth("100.0%");
		verticalLayout_3.setHeight("-1px");
		verticalLayout_3.setMargin(false);
		
		// label_2
		label_2 = new Label();
		label_2.setImmediate(false);
		label_2.setWidth("-1px");
		label_2.setHeight("-1px");
		label_2.setStyleName("home-label");
		label_2.setValue("Documents:");
		verticalLayout_3.addComponent(label_2);
		verticalLayout_3.setComponentAlignment(label_2, new Alignment(6));
		
		// label_4
		label_4 = new Label();
		label_4.setImmediate(false);
		label_4.setWidth("-1px");
		label_4.setHeight("-1px");
		label_4.setValue("Annotations:");
		label_4.setStyleName("home-label");
		verticalLayout_3.addComponent(label_4);
		verticalLayout_3.setComponentAlignment(label_4, new Alignment(6));
		
		return verticalLayout_3;
	}

	@AutoGenerated
	private VerticalLayout buildVerticalLayout_4() {
		// common part: create layout
		verticalLayout_4 = new VerticalLayout();
		verticalLayout_4.setImmediate(false);
		verticalLayout_4.setWidth("100.0%");
		verticalLayout_4.setHeight("-1px");
		verticalLayout_4.setMargin(false);
		
		// label_5
		label_5 = new Label();
		label_5.setImmediate(false);
		label_5.setWidth("-1px");
		label_5.setHeight("-1px");
		label_5.setValue("0");
		label_5.setStyleName("home-label");
		verticalLayout_4.addComponent(label_5);
		
		// label_6
		label_6 = new Label();
		label_6.setImmediate(false);
		label_6.setWidth("-1px");
		label_6.setHeight("-1px");
		label_6.setValue("0");
		label_6.setStyleName("home-label");
		verticalLayout_4.addComponent(label_6);
		
		return verticalLayout_4;
	}

	@AutoGenerated
	private Panel buildPanel_2() {
		// common part: create layout
		panel_2 = new Panel();
		panel_2.setImmediate(false);
		panel_2.setWidth("100.0%");
		panel_2.setHeight("100.0%");
		
		// verticalLayout_5
		verticalLayout_5 = new VerticalLayout();
		verticalLayout_5.setImmediate(false);
		verticalLayout_5.setWidth("100.0%");
		verticalLayout_5.setHeight("100.0%");
		verticalLayout_5.setMargin(false);
		panel_2.setContent(verticalLayout_5);
		
		return panel_2;
	}
	
	public void refreshCounters(String username){
		label_6.setValue(String.valueOf(UserUtils.getNumberOfAnnotations(username)));
		label_5.setValue(String.valueOf(UserUtils.getNumberOfDocuments(username)));
	}

}
