package org.nanotate.ui;

import java.sql.SQLException;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Property;
import com.vaadin.data.util.filter.Compare;
import com.vaadin.data.util.sqlcontainer.SQLContainer;
import com.vaadin.data.util.sqlcontainer.connection.JDBCConnectionPool;
import com.vaadin.data.util.sqlcontainer.connection.SimpleJDBCConnectionPool;
import com.vaadin.data.util.sqlcontainer.query.TableQuery;
import com.vaadin.server.ExternalResource;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Embedded;
import com.vaadin.ui.Field.ValueChangeEvent;
import com.vaadin.ui.Panel;
import com.vaadin.ui.Table;
import com.vaadin.ui.VerticalLayout;

public class Viewer extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private Panel annotations;
	@AutoGenerated
	private VerticalLayout verticalLayout_3;
	@AutoGenerated
	private Button prueba;
	@AutoGenerated
	private Panel docs;
	@AutoGenerated
	private VerticalLayout verticalLayout_2;
	@AutoGenerated
	private Embedded embedded_1;
	
	private Table docs_table;
	
	SQLContainer container;
	/**
	 * 
	 */
	private static final long serialVersionUID = 8416626488644424865L;
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public Viewer() {
		
		
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
	}
	
	public SQLContainer getContainer(){
		return container;
	}
	
	
	public void initContainer(String user){
		try {
			JDBCConnectionPool pool = new SimpleJDBCConnectionPool(
			        "com.mysql.jdbc.Driver",
			        "jdbc:mysql://localhost:3306/annotatorjs", "annotatorjs", "annotator7541", 2, 5);
			TableQuery tq = new TableQuery("documents", pool);
			tq.setVersionColumn("upload_date");
			container = new SQLContainer(tq);
			container.addContainerFilter(new Compare.Equal("uploaded_by", user));
			docs_table= new Table();
			docs_table.setContainerDataSource(container);
			docs_table.setSelectable(true);
			docs_table.setNullSelectionAllowed(false);
			docs_table.setMultiSelect(false);
			docs_table.setColumnCollapsingAllowed(true);
			docs_table.setColumnCollapsed("doc_uuid", true);
			docs_table.setColumnCollapsed("doi", true);
			docs_table.addValueChangeListener(new Property.ValueChangeListener() {
			 

				/**
				 * 
				 */
				private static final long serialVersionUID = -4944536175063979025L;

				@Override
				public void valueChange(
						com.vaadin.data.Property.ValueChangeEvent event) {
					
					Object rowId = docs_table.getValue(); // get the selected rows id
					String uuid = (String) docs_table.getContainerProperty(rowId,"doc_uuid").getValue();
					embedded_1.setSource(new ExternalResource(
							"http://local.host:8080/repository/"+uuid+"/index.html"));
				}
			});
			verticalLayout_2.addComponent(docs_table);
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// embedded_1
		embedded_1 = new Embedded();
		embedded_1.setImmediate(false);
		embedded_1.setWidth("100.0%");
		embedded_1.setHeight("100.0%");
		embedded_1.setSource(new ExternalResource(
				"http://localhost:8080/repository/ad06b023d1204f08af56d4e95d2d8cae/index.html"));
		embedded_1.setType(2);
		embedded_1.setMimeType("image/png");
		mainLayout.addComponent(embedded_1,
				"top:0.0px;right:5.0%;bottom:0.0px;left:5.0%;");
		
		// docs
		docs = buildDocs();
		mainLayout.addComponent(docs, "top:2.5%;bottom:2.5%;left:0.0px;");
		
		// annotations
		annotations = buildAnnotations();
		mainLayout.addComponent(annotations,
				"top:2.5%;right:0.0px;bottom:2.5%;");
		
		return mainLayout;
	}

	@AutoGenerated
	private Panel buildDocs() {
		// common part: create layout
		docs = new Panel();
		docs.setStyleName("docs-panel");
		docs.setImmediate(false);
		docs.setWidth("300px");
		docs.setHeight("100.0%");
		
		// verticalLayout_2
		verticalLayout_2 = new VerticalLayout();
		verticalLayout_2.setImmediate(false);
		verticalLayout_2.setWidth("100.0%");
		verticalLayout_2.setHeight("100.0%");
		verticalLayout_2.setMargin(false);
		
		docs.setContent(verticalLayout_2);
		
		return docs;
	}

	@AutoGenerated
	private Panel buildAnnotations() {
		// common part: create layout
		annotations = new Panel();
		annotations.setStyleName("annotations-panel");
		annotations.setImmediate(false);
		annotations.setWidth("300px");
		annotations.setHeight("100.0%");
		
		// verticalLayout_3
		verticalLayout_3 = buildVerticalLayout_3();
		annotations.setContent(verticalLayout_3);
		
		return annotations;
	}

	@AutoGenerated
	private VerticalLayout buildVerticalLayout_3() {
		// common part: create layout
		verticalLayout_3 = new VerticalLayout();
		verticalLayout_3.setEnabled(true);
		verticalLayout_3.setImmediate(false);
		verticalLayout_3.setWidth("100.0%");
		verticalLayout_3.setHeight("100.0%");
		verticalLayout_3.setMargin(false);
		
		
		
		return verticalLayout_3;
	}

}
