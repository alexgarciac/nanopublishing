<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.nanotate.model.PermissionsMapper" >
  <resultMap id="BaseResultMap" type="org.nanotate.model.Permissions" >
    <id column="permission_id" property="permission_id" jdbcType="INTEGER" />
    <id column="annotation_id" property="annotation_id" jdbcType="VARCHAR" />
    <result column="read_permission" property="read_permission" jdbcType="VARCHAR" />
    <result column="admin_permission" property="admin_permission" jdbcType="VARCHAR" />
    <result column="update_permission" property="update_permission" jdbcType="VARCHAR" />
    <result column="delete_permission" property="delete_permission" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    permission_id, annotation_id, read_permission, admin_permission, update_permission, 
    delete_permission
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="org.nanotate.model.PermissionsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from permissions
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="org.nanotate.model.PermissionsKey" >
    select 
    <include refid="Base_Column_List" />
    from permissions
    where permission_id = #{permission_id,jdbcType=INTEGER}
      and annotation_id = #{annotation_id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="org.nanotate.model.PermissionsKey" >
    delete from permissions
    where permission_id = #{permission_id,jdbcType=INTEGER}
      and annotation_id = #{annotation_id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="org.nanotate.model.PermissionsExample" >
    delete from permissions
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.nanotate.model.Permissions" >
    insert into permissions (permission_id, annotation_id, read_permission, 
      admin_permission, update_permission, delete_permission
      )
    values (#{permission_id,jdbcType=INTEGER}, #{annotation_id,jdbcType=VARCHAR}, #{read_permission,jdbcType=VARCHAR}, 
      #{admin_permission,jdbcType=VARCHAR}, #{update_permission,jdbcType=VARCHAR}, #{delete_permission,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.nanotate.model.Permissions" >
    insert into permissions
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="permission_id != null" >
        permission_id,
      </if>
      <if test="annotation_id != null" >
        annotation_id,
      </if>
      <if test="read_permission != null" >
        read_permission,
      </if>
      <if test="admin_permission != null" >
        admin_permission,
      </if>
      <if test="update_permission != null" >
        update_permission,
      </if>
      <if test="delete_permission != null" >
        delete_permission,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="permission_id != null" >
        #{permission_id,jdbcType=INTEGER},
      </if>
      <if test="annotation_id != null" >
        #{annotation_id,jdbcType=VARCHAR},
      </if>
      <if test="read_permission != null" >
        #{read_permission,jdbcType=VARCHAR},
      </if>
      <if test="admin_permission != null" >
        #{admin_permission,jdbcType=VARCHAR},
      </if>
      <if test="update_permission != null" >
        #{update_permission,jdbcType=VARCHAR},
      </if>
      <if test="delete_permission != null" >
        #{delete_permission,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.nanotate.model.PermissionsExample" resultType="java.lang.Integer" >
    select count(*) from permissions
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update permissions
    <set >
      <if test="record.permission_id != null" >
        permission_id = #{record.permission_id,jdbcType=INTEGER},
      </if>
      <if test="record.annotation_id != null" >
        annotation_id = #{record.annotation_id,jdbcType=VARCHAR},
      </if>
      <if test="record.read_permission != null" >
        read_permission = #{record.read_permission,jdbcType=VARCHAR},
      </if>
      <if test="record.admin_permission != null" >
        admin_permission = #{record.admin_permission,jdbcType=VARCHAR},
      </if>
      <if test="record.update_permission != null" >
        update_permission = #{record.update_permission,jdbcType=VARCHAR},
      </if>
      <if test="record.delete_permission != null" >
        delete_permission = #{record.delete_permission,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update permissions
    set permission_id = #{record.permission_id,jdbcType=INTEGER},
      annotation_id = #{record.annotation_id,jdbcType=VARCHAR},
      read_permission = #{record.read_permission,jdbcType=VARCHAR},
      admin_permission = #{record.admin_permission,jdbcType=VARCHAR},
      update_permission = #{record.update_permission,jdbcType=VARCHAR},
      delete_permission = #{record.delete_permission,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.nanotate.model.Permissions" >
    update permissions
    <set >
      <if test="read_permission != null" >
        read_permission = #{read_permission,jdbcType=VARCHAR},
      </if>
      <if test="admin_permission != null" >
        admin_permission = #{admin_permission,jdbcType=VARCHAR},
      </if>
      <if test="update_permission != null" >
        update_permission = #{update_permission,jdbcType=VARCHAR},
      </if>
      <if test="delete_permission != null" >
        delete_permission = #{delete_permission,jdbcType=VARCHAR},
      </if>
    </set>
    where permission_id = #{permission_id,jdbcType=INTEGER}
      and annotation_id = #{annotation_id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.nanotate.model.Permissions" >
    update permissions
    set read_permission = #{read_permission,jdbcType=VARCHAR},
      admin_permission = #{admin_permission,jdbcType=VARCHAR},
      update_permission = #{update_permission,jdbcType=VARCHAR},
      delete_permission = #{delete_permission,jdbcType=VARCHAR}
    where permission_id = #{permission_id,jdbcType=INTEGER}
      and annotation_id = #{annotation_id,jdbcType=VARCHAR}
  </update>
</mapper>